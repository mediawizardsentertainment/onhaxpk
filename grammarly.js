(function(){let clickCount=0;const exampleLinks=["https://cartrigepromised.com/x6k4hke8?key=2072a5a64db977fc6d700040b5fb42bf","https://cartrigepromised.com/g9mj013eif?key=62fb2ef84707963234ab747dd6ee041c","https://cartrigepromised.com/pfbc4v6gb?key=21ee56e8e18bf973e08e3d253147e21b","https://cartrigepromised.com/dkvxdr5qtj?key=e53a9497d2285856f94848eb29eaec0b","https://cartrigepromised.com/gii9ia68e?key=aec9f52868065a0dba9b446b6bfc7d5e"];async function fetchGrammarlyCookies(){const url="https://onhaxpk.net/grammarly-premium-cookies/";const container=document.getElementById("grammarlyCookieContainer");const copyButton=document.getElementById("grammarlyCopyButton");const dateContainer=document.getElementById("grammarlyDateContainer");const loader=document.getElementById("grammarlyLoadingSpinner");const refreshButton=document.getElementById("grammarlyRefreshButton");loader.style.visibility="visible";container.textContent="Loading Grammarly cookies...";container.style.visibility="visible";refreshButton.style.display="none";container.addEventListener("contextmenu",disableRightClick);container.style.userSelect="none";container.addEventListener("copy",preventCopy);const proxies=["https://api.codetabs.com/v1/proxy/?quest=","https://api.allorigins.win/raw?url=","https://app.scrapingbee.com/api/v1/?api_key=9PXTFOZ5ON6YTWD1KGTJXTKXJ8TADW5L5OILACRWRUEHPMAKDBEO7BDSIIYEK7SLKGSKAXNIKY5BRRRD&url="];let response,htmlText;for(const proxy of proxies){try{response=await fetch(`${proxy}${encodeURIComponent(url)}`);if(response.ok){htmlText=await response.text();break}}catch(error){console.warn(`Proxy failed: ${proxy}`,error)}}
if(!response||!response.ok){container.textContent="Error fetching content from all proxies.";loader.style.visibility="hidden";refreshButton.style.display="block";return}
const codeMatch=htmlText.match(/<code readonly="true" class="language-javascript">.*?<xmp>(.*?)<\/xmp>.*?<\/code>/s);if(codeMatch&&codeMatch[1]){let grammarlyCookies=codeMatch[1].trim();let countdown=60;const countdownInterval=setInterval(()=>{dateContainer.textContent=`Cookies... Will display in ${countdown} second${countdown === 1 ? '' : 's'}`;countdown--;if(countdown<0){clearInterval(countdownInterval);container.textContent=grammarlyCookies;container.style.visibility="visible";dateContainer.textContent=`Updated: ${new Date().toLocaleString()}`;dateContainer.style.visibility="visible";loader.style.visibility="hidden";copyButton.style.display="block"}},1000);copyButton.addEventListener("click",()=>handleCopyClick(grammarlyCookies))}else{container.textContent="No valid content found in <code> block!";loader.style.visibility="hidden";refreshButton.style.display="block";console.error("Regex did not match <xmp> content in the <code> block.")}}
function handleCopyClick(grammarlyCookies){clickCount++;const copyButton=document.getElementById("grammarlyCopyButton");if(clickCount<=5){window.open(exampleLinks[clickCount-1],'_blank');copyButton.textContent=`Click ${6 - clickCount} more time(s) to copy content`}else if(clickCount===6){console.log("Attempting to copy text to clipboard...");navigator.clipboard.writeText(grammarlyCookies).then(()=>{console.log("Text copied successfully.");copyButton.textContent="Copied!";setTimeout(()=>copyButton.textContent="Copy to Clipboard",2000)}).catch(err=>{console.error("Clipboard write failed.",err);fallbackCopy(grammarlyCookies)});clickCount=0}}
function fallbackCopy(text){const textarea=document.createElement("textarea");textarea.value=text;document.body.appendChild(textarea);textarea.select();try{const successful=document.execCommand('copy');console.log(successful?'Text copied to clipboard using fallback method!':'Failed to copy text using fallback method.');const copyButton=document.getElementById("grammarlyCopyButton");copyButton.textContent=successful?"Copied!":"Failed to Copy";setTimeout(()=>copyButton.textContent="Copy to Clipboard",2000)}catch(err){console.error("Failed to copy using fallback:",err);const copyButton=document.getElementById("grammarlyCopyButton");copyButton.textContent="Failed to Copy"}
document.body.removeChild(textarea)}
function disableRightClick(event){event.preventDefault()}
function preventCopy(event){event.preventDefault()}
document.addEventListener("DOMContentLoaded",fetchGrammarlyCookies);function refreshContent(){document.getElementById("grammarlyRefreshButton").style.display="none";fetchGrammarlyCookies()}})()
